CREATE DATABASE QuantumDB;

-- drop database QuantumDB;

USE QuantumDB;

CREATE TABLE tipoUsuario(
    idTipoUsuario INT PRIMARY KEY AUTO_INCREMENT,
    nome varchar(45)
);

INSERT INTO tipoUsuario (nome) 
VALUES ('Administrador'), ('Gerente'), ('Tecnico');

CREATE TABLE situacao(
    idSituacao INT PRIMARY KEY AUTO_INCREMENT,
    tipo varchar(45)
);

INSERT INTO situacao (tipo) 
VALUES ('Desativado'), ('Ativado');

CREATE TABLE tipoComponente(
    idTipoComponente INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(45)
);

INSERT INTO tipoComponente(nome) 
VALUES ('Ram'), ('CPU'), ('Disco'), ('Rede');

-- Tabela periodoAtividade
CREATE TABLE periodoAtividade(
    idEstado INT PRIMARY KEY AUTO_INCREMENT,
    dtHora DATETIME,
    tempoAtivo INT
);

INSERT INTO periodoAtividade(dtHora, tempoAtivo) 
VALUES (NOW(), 5), (NOW(), 10);

-- Tabela empresa
CREATE TABLE empresa(
    idEmpresa INT PRIMARY KEY AUTO_INCREMENT,
    razao_social VARCHAR(100),
    cnpj CHAR(14),
    fkSituacao INT,
    FOREIGN KEY (fkSituacao) REFERENCES situacao(idSituacao)
);

INSERT INTO empresa(razao_social, cnpj, fkSituacao) 
VALUES ('Santa Marcelina', '90847581904876', 2),
       ('Doutor consulta', '90847581904221', 2),
       ('A.C Camargo', '10289465718298', 2);

-- Tabela endereco
CREATE TABLE endereco(
    idEndereco INT PRIMARY KEY AUTO_INCREMENT,
    cep CHAR(8),
    rua VARCHAR(45),
    complemento VARCHAR(45),
    num INT,
    fkEmpresa INT,
    FOREIGN KEY (fkEmpresa) REFERENCES empresa(idEmpresa)
);

INSERT INTO endereco(cep, rua, complemento, num, fkEmpresa) 
VALUES ('08485430', 'Rua arroio triunfo', 'Hospital', 42, 1),
       ('08485540', 'Rua ladeira porto geral', 'Hospital', 1991, 2),
       ('09283727', 'Rua liberdade', 'Hospital', 3955, 3);

CREATE TABLE usuario(
    idUsuario INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(255),
    email VARCHAR(255),
    senha VARCHAR(255),
    data_cadastro DATETIME,
    fotoPerfil VARCHAR(600),
    fkEmpresa INT,
    fkTipoUsuario INT,
    fkSituacao INT,
    FOREIGN KEY (fkEmpresa) REFERENCES empresa(idEmpresa),
    FOREIGN KEY (fkTipoUsuario) REFERENCES tipoUsuario(idTipoUsuario),
    FOREIGN KEY (fkSituacao) REFERENCES situacao(idSituacao)
);

SELECT 
    usuario.nome AS nomeUsuario,
    usuario.email,
    empresa.razao_social AS nomeEmpresa,
    tipoUsuario.nome AS cargoUsuario
FROM usuario
JOIN empresa ON usuario.fkEmpresa = empresa.idEmpresa
JOIN tipoUsuario ON usuario.fkTipoUsuario = tipoUsuario.idTipoUsuario;

CREATE TABLE servidor(
    idServidor INT PRIMARY KEY AUTO_INCREMENT,
    nomeServidor VARCHAR(45),
    fkEmpresa INT,
    fkLocalizacao INT,
    fkTempoAtividade INT,
    fkSituacao INT,
    FOREIGN KEY (fkEmpresa) REFERENCES empresa(idEmpresa),
    FOREIGN KEY (fkLocalizacao) REFERENCES endereco(idEndereco),
    FOREIGN KEY (fkSituacao) REFERENCES situacao(idSituacao),
    FOREIGN KEY (fkTempoAtividade) REFERENCES periodoAtividade(idEstado)
);

INSERT INTO servidor(nomeServidor, fkEmpresa, fkLocalizacao, fkTempoAtividade, fkSituacao) 
VALUES ('Servidor 1', 1, 1, 1, 2),
       ('Servidor 2', 2, 2, 2, 1),
       ('Servidor 3', 3, 3, 1, 2);

-- Tabela componente
CREATE TABLE componente(
    idComponente INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(45),
    fabricante VARCHAR(45),
    fkServidor INT,
    fkTipoComponente INT,
    FOREIGN KEY (fkServidor) REFERENCES servidor(idServidor),
    FOREIGN KEY (fkTipoComponente) REFERENCES tipoComponente(idTipoComponente)
);

INSERT INTO componente(nome, fabricante, fkServidor, fkTipoComponente) 
VALUES ('CPU', 'Intel', 1, 2),
       ('RAM', 'Corsair', 1, 1),
       ('DISCO', 'Seagate', 1, 3),
		('REDE', 'Intel', 1, 4);

-- Tabela log
CREATE TABLE log(
    idLog INT PRIMARY KEY AUTO_INCREMENT,
    dtHora DATETIME,
    tempoAtividade DATETIME,
    usoComponente DOUBLE,
    fkComponente INT,
    FOREIGN KEY (fkComponente) REFERENCES componente(idComponente)
);

-- Tabela limiteComponente
CREATE TABLE limiteComponente(
    idLimiteComponente INT PRIMARY KEY AUTO_INCREMENT,
    valorLimite DOUBLE,
    fkComponente INT,
    FOREIGN KEY (fkComponente) REFERENCES componente(idComponente)
);

-- Tabela alerta
CREATE TABLE alerta(
    idAlerta INT PRIMARY KEY AUTO_INCREMENT,
    data DATETIME,
    descricao VARCHAR(45),
    fkLog INT,
    fkLimiteComponente INT,
    fkComponente int,
    FOREIGN KEY (fkLog) REFERENCES log(idLog),
	FOREIGN KEY (fkComponente) REFERENCES Componente(idComponente),
    FOREIGN KEY (fkLimiteComponente) REFERENCES limiteComponente(idLimiteComponente)
);

create table tabelaTrovo(
	idTrovo int primary key auto_increment,
    qtdServicosAtivos int,
    mudancaContexto int,
    cargaSistema int,
    taxaTransfarencia int,
    errosTcp int,
    consumoMemoriaSwap int,
    totalMemoriaRam int,
    totalMemoriaSwap int,
    ioDisco int,
    espacoLivreDisco int,
    espacoTotalDisco int,
    fkComponente int,
	FOREIGN KEY (fkComponente) REFERENCES Componente(idComponente)
);

-- View para análise do uso dos componentes
CREATE VIEW analiseUsoComponentes AS
SELECT 
    componente.nome AS nomeComponente,
    MIN(log.usoComponente) AS usoMinimo,
    MAX(log.usoComponente) AS usoMaximo
FROM log
JOIN componente ON log.fkComponente = componente.idComponente
GROUP BY componente.nome;

-- Consulta de servidores
SELECT servidor.nomeServidor, empresa.razao_social, situacao.tipo
FROM servidor
JOIN empresa ON servidor.fkEmpresa = empresa.idEmpresa
JOIN situacao ON servidor.fkSituacao = situacao.idSituacao;
select * from tipoComponente;
INSERT INTO log (dtHora, tempoAtividade, usoComponente, fkComponente)
VALUES 
    ('2024-11-13 10:30:00', '2024-11-13 10:45:00', 45.5, 2),
    ('2024-11-13 11:00:00', '2024-11-13 11:30:00', 50.2, 2),
    ('2024-11-13 12:00:00', '2024-11-13 12:20:00', 62.1, 2),
    ('2024-11-13 13:00:00', '2024-11-13 13:10:00', 33.8, 2),
    ('2024-11-13 14:00:00', '2024-11-13 14:30:00', 78.9, 2);
    
INSERT INTO log (dtHora, tempoAtividade, usoComponente, fkComponente)
VALUES 
    ('2024-11-13 10:00:00', '2024-11-13 02:30:00', 45.5, 4), 
    ('2024-11-13 11:00:00', '2024-11-13 01:45:00', 50.2, 4), 
    ('2024-11-13 12:00:00', '2024-11-13 03:00:00', 62.1, 4), 
    ('2024-11-13 13:00:00', '2024-11-13 01:00:00', 33.8, 4), 
    ('2024-11-13 14:00:00', '2024-11-13 04:00:00', 78.9, 4);
    
INSERT INTO alerta (data, descricao, fkLog, fkLimiteComponente) 
VALUES
	('2024-11-15 08:00:00', 'Alerta de uso de CPU alto', 1, 1),
	('2024-11-15 08:30:00', 'Alerta de mudança de contexto', 2, 2),
	('2024-11-15 09:00:00', 'Alerta de carga de sistema alta', 3, 3),
	('2024-11-15 09:30:00', 'Alerta de uso de memória excessivo', 4, 4);

select usoComponente from log where fkComponente = 4;
select * from limiteComponente;

select count(*) from alerta where fkComponente = 1;

INSERT INTO alerta (data, descricao, fkLog, fkLimiteComponente, fkComponente) VALUES
('2024-11-15 08:00:00', 'Alerta de uso de CPU elevado', 1, 1, 1),
('2024-11-15 08:30:00', 'Alerta de alteração no contexto', 2, 2, 2),
('2024-11-15 09:00:00', 'Alerta de carga de sistema alta', 3, 3, 3),
('2024-11-15 09:30:00', 'Alerta de limite de componente ultrapassado', 4, 4, 4);

INSERT INTO limiteComponente (valorLimite, fkComponente) VALUES
(80.5, 1),  -- Limite para o componente 1
(70.0, 2),  -- Limite para o componente 2
(90.2, 3),  -- Limite para o componente 3
(75.4, 4);  -- Limite para o componente 4

SELECT 
    l.fkComponente, 
    COUNT(a.idAlerta) AS quantidade_alertas, 
    COUNT(l.idLog) AS quantidade_logs,
    ROUND(IFNULL((COUNT(a.idAlerta) / COUNT(l.idLog)) * 100, 0), 0) AS chance_alerta_percentual
FROM 
    log l
LEFT JOIN 
    alerta a ON l.fkComponente = a.fkComponente
WHERE 
    l.fkComponente = 1
GROUP BY 
    l.fkComponente;
    
select qtdServicosAtivos from tabelaTrovo;

SELECT COALESCE(cargaSistema, 0) AS cargaSistema 
FROM tabelaTrovo;

SELECT COALESCE(mudancaContexto, 0)
    FROM tabelaTrovo;
    
SELECT COALESCE(qtdServicosAtivos, 0) AS cargaSistema 
FROM tabelaTrovo;

select * from log where fkComponente = 2;
select * from alerta where fkComponente = 2;
